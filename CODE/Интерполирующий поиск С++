#include <iostream>
using namespace std;

// Функция интерполирующего поиска
int interpolationSearch(int arr[], int n, int target) {
    int low = 0, high = n - 1;

    while ((arr[high] != arr[low]) && (target >= arr[low]) && (target <= arr[high])) {
        // Расчёт промежуточной позиции
        int pos = low + (((double)(high - low) /
                         (arr[high] - arr[low])) *
                        (target - arr[low]));

        // Если элемент найден
        if (arr[pos] == target)
            return pos;

        // Если элемент меньше цели, сдвигаем нижнюю границу
        if (arr[pos] < target)
            low = pos + 1;
        else
            high = pos - 1;
    }

    // Проверяем последнюю ячейку, если остались условия поиска
    if (target == arr[low])
        return low;

    return -1;  // Элемент не найден
}

int main() {
    int arr[] = {10, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 33, 35, 42, 47};
    int n = sizeof(arr) / sizeof(arr[0]);
    int target = 18;

    int index = interpolationSearch(arr, n, target);

    if (index != -1)
        cout << "Элемент найден на индексе " << index << endl;
    else
        cout << "Элемент не найден" << endl;

    return 0;
}
