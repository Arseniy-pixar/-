Куча (heap) — это специализированная структура данных, представляющая собой бинарное (двоичное) дерево, узлы которого являются элементами массива (списка).

Распространённые типы куч и их поддержка в языках программирования:

· Бинарная куча:
  · Python: модуль heapq с функциями heappush, heappop, heapify, heapreplace.
  · C++: алгоритмы make_heap, push_heap, pop_heap.
  · Java: класс PriorityQueue.
· Биномиальная куча:
    Поддерживает операции вставки, поиска и извлечения минимального элемента. В C++ и Java также предоставляет методы слияния (merge, meld) и уменьшения ключа.
· Куча Фибоначчи:
    Обеспечивает эффективные операции insert, extract_min, merge и decrease_key. Реализована в виде наборов методов в Python, C++ и Java.

Хэш-таблица — массив фиксированного размера, где каждый элемент (бакет) может содержать один или несколько объектов.
Компоненты:
Хеш-функция — алгоритм, который преобразует входные данные (ключ) в числовой индекс массива.
Бакеты — элементы массива, в которых хранятся данные. Каждый бакет может содержать один объект или список объектов, если произошла коллизия.

Основные этапы работы хэш-таблицы:
1.Хеширование. 
Когда элемент добавляется в хеш-таблицу, его ключ проходит через хеш-функцию, которая вычисляет индекс массива.
2.Разрешение коллизий. 
Если два разных ключа приводят к одному и тому же индексу, применяется один из методов разрешения коллизий, например, метод цепочек (хранение нескольких значений в одном бакете) или открытая адресация (поиск другой ячейки в таблице).
3.Поиск элемента.
Хеш-функция вычисляет индекс, затем в соответствующем бакете выполняется поиск нужного значения. Если используются методы разрешения коллизий, может потребоваться проверка нескольких значений.
4.Перехеширование. 
Когда хеш-таблица становится слишком загруженной, выполняется её расширение с перераспределением элементов. Новый размер таблицы обычно выбирается в два раза больше текущего, чтобы уменьшить вероятность коллизий и сохранить высокую производительность.
